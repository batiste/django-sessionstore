=================================================================================
django-sessionstore - Django Cache+DB Session wich uses table rotation for expiry
=================================================================================

:Version: 0.0.2

Introduction
============

This package provide an alternative way to handle sessions with the Django framework.

If you decide to store data in the session for unlogged users, you session table
could become quickly big (several gigabytes). Deleting sessions with the script
provided by Django is not possible anymore (too slow, create lock issue with InnoDB).

This solution provided here is to duplicate the session table and migrate the used
sessions from the old table to the new one when the user try to access them.

After a choosen time. Repeat the operation and finaly delete the old table.

Usage
=====

Start by executing::

    $ python manage.py rotatesessions

This should create a new session table. Restart your server after that so
the new table names are taken in account. Every session that is saved will
be migrated from the old table to the new one.

When you begin to have a lot of these session table you can cleanup
the unused one by doing::

    $ python manage.py cleanupsessions

All the old session tables will be truncated/droped. Don't run this if you
are not sure that everything went properly.

Installation
============

You can install ``django-sessionstore`` either via the Python Package Index (PyPI)
or from source.

To install using ``pip``,::

    $ pip install django-sessionstore


To install using ``easy_install``,::

    $ easy_install django-sessionstore


If you have downloaded a source tarball you can install it
by doing the following,::

    $ python setup.py build
    # python setup.py install # as root

